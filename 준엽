import matplotlib.pyplot as plt
import matplotlib.animation as animation
import numpy as np

# 초기 데이터 설정
hcl_positions = [(-4, 2), (-2, 2)]  # H+와 Cl- 이온
naoh_positions = [(-4, -2), (-2, -2)]  # Na+와 OH- 이온
water_molecule = []  # 생성된 물 분자 위치
final_ions = []  # Na+와 Cl-의 최종 위치

# 플롯 설정
fig, ax = plt.subplots()
ax.set_xlim(-6, 6)
ax.set_ylim(-4, 4)

hcl_scatter, = ax.plot([], [], 'ro', label="HCl (H⁺, Cl⁻)")
naoh_scatter, = ax.plot([], [], 'bo', label="NaOH (Na⁺, OH⁻)")
water_scatter, = ax.plot([], [], 'go', label="H₂O (물 분자)")
final_ions_scatter, = ax.plot([], [], 'mo', label="Na⁺, Cl⁻ (생성 이온)")

ax.legend()
ax.set_title("중화 반응 시뮬레이션")

# 애니메이션 업데이트 함수
def update(frame):
    global hcl_positions, naoh_positions, water_molecule, final_ions

    # 반응 전
    if frame == 0:
        hcl_scatter.set_data([p[0] for p in hcl_positions], [p[1] for p in hcl_positions])
        naoh_scatter.set_data([p[0] for p in naoh_positions], [p[1] for p in naoh_positions])
        water_scatter.set_data([], [])
        final_ions_scatter.set_data([], [])
    
    # 반응 중
    elif frame == 1:
        # H+와 OH- 이온 결합 -> 물 분자 생성
        h_pos = hcl_positions.pop(0)  # H+ 제거
        oh_pos = naoh_positions.pop(-1)  # OH- 제거
        water_molecule = [(h_pos[0] + oh_pos[0]) / 2, (h_pos[1] + oh_pos[1]) / 2]
        
        # 나머지 Na⁺, Cl⁻ 이온 설정
        final_ions = [naoh_positions[0], hcl_positions[0]]  # Na⁺, Cl⁻

        # 업데이트된 데이터 반영
        hcl_scatter.set_data([p[0] for p in hcl_positions], [p[1] for p in hcl_positions])
        naoh_scatter.set_data([p[0] for p in naoh_positions], [p[1] for p in naoh_positions])
        water_scatter.set_data(water_molecule[0], water_molecule[1])
        final_ions_scatter.set_data([p[0] for p in final_ions], [p[1] for p in final_ions])
    
    # 반응 후
    elif frame == 2:
        # 최종 상태만 표시
        hcl_scatter.set_data([], [])
        naoh_scatter.set_data([], [])
        water_scatter.set_data(water_molecule[0], water_molecule[1])
        final_ions_scatter.set_data([p[0] for p in final_ions], [p[1] for p in final_ions])

    return hcl_scatter, naoh_scatter, water_scatter, final_ions_scatter

# 애니메이션 설정
ani = animation.FuncAnimation(fig, update, frames=3, interval=1000, repeat=False)
plt.show()
